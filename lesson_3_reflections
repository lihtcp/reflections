Question 1: When would you want to use a remote repository rather than keeping all your work local?

You might want to use a remote repository if you are working with multiple people, and each
person is going to be working on the same project. It also might be helpful if you use multiple
computers for a single project, so that you can pick up where you left off on the project,
no matter which computer you are using. You can also use the remote repository if you would 
like to make your work public, and allow others to comment and give you change suggestions.

Question 2: Why might you want to always pull changes manually rather than
having Git automatically stay up-to-date with your remote repository?

If you are working on a project that others are also working on, it might
be more helpful to only pull the changes that others have made when you are
ready to incorporate them into what you are working on. It also makes sense
to manually pull so that you pull at logical points rather than mid-change
 or before something is working correctly.

Question 3: Describe the differences between forks, clones, and branches.
When would you use one instead of another?

Branches are only in local repositories where you are making commits. You
can make a branch so that the master commit isn’t affected by changes you
want to try out elsewhere. A clone takes a repository from somewhere else
and clones it into your local repository. This is useful it you want to use
someone else’s repository on your local computer. Finally, a fork is when you
copy someone’s remote repository into your remote repository. You can then
use that file locally by cloning it into your local repository.

Question 4: What is the benefit of having a copy of the last known state of the
remote stored locally?

It is helpful to have this because if you need to revert back to a previous
commit you can use what you have locally rather than going online. It is also
useful so that you don’t have to do as many merges, if you have the most updated
version you will be adding changes to a file that already has the other changes.
If not you would have to add your changes to a file that has them, and merging
could take more effort.

Question 5: How would you collaborate without using Git or Github?
What would be easier, and what would be harder?

I usually use google docs to collaborate. It shows the changes that
everyone makes, but it isn’t the same as merging together changes.
It does update in real time, so more than one person can be working at
once without having to merge the files later. However, you can’t do work
remotely unless you want to then upload a word document and then open it.
This file would then need to be updated to incorporate changes from the
other file. It is also possible to have comments in google docs which is
somewhat similar to the pull requests. You can have a comment suggesting
a change, and then once someone approves it, you can go ahead and make it.